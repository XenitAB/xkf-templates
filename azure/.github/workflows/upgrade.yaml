name: terraform_upgrade
on:
  workflow_dispatch:
  schedule:
    - cron: "0 * * * *"
jobs:
  upgrade:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          path: this

      - name: Checkout template
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          repository: XenitAB/xkf-templates
          path: xkf-templates

      - name: Check update
        id: check_update
        run: |
          set -x
          cd ${GITHUB_WORKSPACE}/xkf-templates
          TEMPLATE_VERSION=$(git describe --abbrev=0 --tags)
          echo "Checking version: $TEMPLATE_VERSION"
          VERSION_FILE="${GITHUB_WORKSPACE}/this/template.version"

          if [ -f "$VERSION_FILE" ]; then
              CURRENT_VERSION=$(cat "$VERSION_FILE")
              echo "$VERSION_FILE contains version $CURRENT_VERSION"
              if [ "$CURRENT_VERSION" == "$TEMPLATE_VERSION" ]; then
                  echo "Template version $TEMPLATE_VERSION already applied"
                  exit 0
              fi 
          fi
          echo "update_check_ok=yes" >> $GITHUB_OUTPUT
          echo "template_version=$TEMPLATE_VERSION" >> $GITHUB_OUTPUT

      - name: Check for existing PR
        id: check_pr
        if: steps.check_update.outputs.update_check_ok == 'yes'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -x
          set +e
          TEMPLATE_VERSION="${{ steps.check_update.outputs.template_version }}"
          PR_BRANCH="upgrade_templates_${TEMPLATE_VERSION//./$'_'}"
          echo "Checking for existing PR for branch $PR_BRANCH"
          cd ${GITHUB_WORKSPACE}/this
          PR_STATUS="$(gh pr view $PR_BRANCH --json state --jq .state)"
          if [ $? == 0 ]; then
            if [ $PR_STATUS == 'OPEN' ]; then
              echo "Open PR already exist"
              exit 0
            fi
          fi
          SUFFIX=$(grep SUFFIX=\"tfstate Makefile)
          echo "pr_branch=$PR_BRANCH" >> $GITHUB_OUTPUT
          echo "suffix=$SUFFIX" >> $GITHUB_OUTPUT

      - name: Apply template
        if: steps.check_pr.outputs.pr_branch != ''
        run: |
          set -x
          TEMPLATE_VERSION="${{ steps.check_update.outputs.template_version }}"
          SUFFIX="${{ steps.check_pr.outputs.suffix }}"
          cd xkf-templates/azure
          find . -type f -name "*.tf" | grep -v tenant | xargs cp --parents -t ${GITHUB_WORKSPACE}/this
          find . -type f -name "*.lock.hcl" | xargs cp --parents -t ${GITHUB_WORKSPACE}/this
          find . -type f  -wholename "*/.github/workflows/*.yaml" | xargs cp --parents -t ${GITHUB_WORKSPACE}/this

          cp Makefile ${GITHUB_WORKSPACE}/this
          cd ${GITHUB_WORKSPACE}/this
          sed -i '/SUFFIX=\"tfstate/c\'"$SUFFIX" Makefile
          # Delete unused optional files
          OPTIONAL_FILES="aks/aks1.tf aks/aks2.tf hub/azpagent.tf hub/ghrunner.tf"
          for FILE in $OPTIONAL_FILES; do
            STATUS="$(git ls-files --others | grep ${FILE} | xargs echo -n)" 
            if [ "$STATUS" == "$FILE" ]; then
                echo "File $FILE is untracked and hence not used and will therefore be ignored."
                rm -f "$FILE"
            fi
          done
          echo $TEMPLATE_VERSION > template.version

      - name: Create PR
        if: steps.check_pr.outputs.pr_branch != ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -x
          set +e
          git config --global user.email "xks-terraform[bot]@users.noreply.github.com"
          git config --global user.name "xks-terraform[bot]"
          PR_BRANCH="${{ steps.check_pr.outputs.pr_branch }}"
          TEMPLATE_VERSION=${{ steps.check_update.outputs.template_version }}
          cd ${GITHUB_WORKSPACE}/this
          git ls-remote --exit-code --heads origin "$PR_BRANCH"
          if [ $? == 0 ]; then
              echo "Branch $PR_BRANCH alredy exist, please delete it."
              exit 1
          fi      
          set -e
          echo "Checking out branch: $PR_BRANCH"
          git checkout -b "$PR_BRANCH"
          git add .
          git status
          git commit -m "Upgrade from template version $TEMPLATE_VERSION"
          git push origin "$PR_BRANCH"
          echo "Creating PR for branch: $PR_BRANCH"
          gh pr create --title "Upgrade from template version $TEMPLATE_VERSION" --body "Auto update from https://github.com/XenitAB/xkf-templates"
